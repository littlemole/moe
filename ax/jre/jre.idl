//import "oaidl.idl";
import "../../lib/src/java/java.idl";

////////////////////////////////////////////////////////////////////////////////////////
// mol JRE COM Lib
////////////////////////////////////////////////////////////////////////////////////////


[
  uuid(0E681FCF-0286-4e02-B95E-9A41BE384FE7),
  version(1.0),
  helpstring("JRE - COM wrapper for Java VM")
]
library JRE
{

////////////////////////////////////////////////////////////////////////////////////////
// Interfaces
////////////////////////////////////////////////////////////////////////////////////////

	////////////////////////////////////////////////////////////////////////////////////
    // TLib :     // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
	////////////////////////////////////////////////////////////////////////////////////
	importlib("stdole32.tlb");
	//importlib("moe.tlb");

	/*
	interface IJavaObject;

	[ 
	  uuid(EA028093-8B55-4D3B-8B0F-824301504455),
      helpstring("IJavaClass - Java class"),
      object,oleautomation, dual
    ]
	interface IJavaClass : IDispatch
    {
		[id(1), helpstring("initialize java class")] 
		HRESULT Initialize([in]long* ptr);

		[id(2), helpstring("ret raw java class ptr")] 
		HRESULT RawPtr([out,retval]long** ptr);
	}


	[
	  uuid(1900068C-D7A1-4654-9019-4F28DE1DE846),
      helpstring("IJavaObject - Java Object"),
      object,oleautomation, dual
    ]
	interface IJavaObject : IDispatch
    {
		[id(1), helpstring("initialize java obj")] 
		HRESULT Initialize([in]long* ptr);

		[id(2), helpstring("get raw java obj ptr")] 
		HRESULT RawPtr([out,retval]long** ptr);
	}
	*/
	////////////////////////////////////////////////////////////////////////////////////
	// IJVM
	////////////////////////////////////////////////////////////////////////////////////
	[
	  uuid(5607D481-5580-4eb7-8ECD-8805846D8C86),
      helpstring("IJVM - wraps java runtime hosting"),
      object,oleautomation, dual
    ]
	interface IJVM : IDispatch
    {

		[propput,id(1), helpstring("get/set the JVM classpath")] 
		HRESULT Classpath( [in] BSTR cp );
		[propget,id(1) ] 
		HRESULT Classpath( [out,retval] BSTR* cp );

		[propput,id(2), helpstring("get/set the JVM classpath")] 
		HRESULT Libpath( [in] BSTR lp );
		[propget,id(2) ] 
		HRESULT Libpath( [out,retval] BSTR* lp );

		[id(DISPID_VALUE), helpstring("load java class")] 
		HRESULT LoadClass([in] BSTR clazzName, [out,retval] IJavaClass** clazz);

		[id(3), helpstring("quit jvm")] 
		HRESULT Exit();

		[id(4), helpstring("cast a java object")] 
		HRESULT Cast([in] IJavaObject* jObject, [in] BSTR clazz, [out,retval] IJavaObject** );

	}

////////////////////////////////////////////////////////////////////////////////////////
// Co Classes ( class factories )
////////////////////////////////////////////////////////////////////////////////////////

	////////////////////////////////////////////////////////////////////////////////////
	// JRE
	////////////////////////////////////////////////////////////////////////////////////

	[
		uuid(B3ED4D8C-7FDD-4177-BF47-3680A8E225BC),
		helpstring("JRE - COM Object for Java VM interaction")
	]
	coclass Java
	{
		[default]         interface     IJVM;
	}

	
	[
		uuid(4CCBBB37-A5F2-47A3-B67B-53AE711DEFCA),
		helpstring("JavaClass - COM Object for Java VM interaction")
	]
	coclass JavaClass
	{
		[default]         interface     IJavaClass;
	}


	[
		uuid(C22704EA-3233-42BC-AA5D-56543D01AA82),
		helpstring("JavaObject - COM Object for Java VM interaction")
	]
	coclass JavaObject
	{
		[default]         interface     IJavaObject;
	}
	
}